---

services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
      - "8443:8443"
    networks:
      - jenkins-net
    # utilisation du groupe docker (avec le GID dans le conteneur jenkins)
    user: jenkins:996
    volumes:
      - jenkins_home:/var/jenkins_home
      - ~/jenkins/certs:/var/jenkins_home/certs
      - ~/.kube/config:/var/jenkins_home/config
      # pour utiliser la CLI de docker: 
      # fonctionne car l'utilisateur du conteneur jenkins a l'UID 1000 comme l'utilsateur vagrat de la VM
      - /usr/bin/docker:/usr/bin/docker
      # WARNING !!! faille de sécurité potentielle
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      # bypass du wizard d'installation
      - >
        JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Dhudson.plugins.git.GitStatus.NOTIFY_COMMIT_ACCESS_CONTROL=disabled
      # attention ajoute un vault ou une variable secrète pour password !!!
      - JENKINS_OPTS=--httpPort=-1 --httpsPort=8443 --httpsKeyStore=/var/jenkins_home/certs/keystore.jks --httpsKeyStorePassword=password
      # - JENKINS_OPTS=--httpPort=8080 --httpsPort=8443 --httpsKeyStore=/var/jenkins_home/certs/keystore.jks --httpsKeyStorePassword=password
      - CLUSTER_ADDR=${CLUSTER_ADDR:-192.168.1.32}
      # mode tcp VS mode socket unix
      # - DOCKER_HOST=tcp://dind:2376
      # - DOCKER_TLS_VERIFY=0
    extra_hosts:
      - "jenkins.lan:172.20.0.1"
  
  # ALTERNATIVE au partage de la socket unix
  # en ajoutant le mode ROOTLESS => 27.3.1-dind-rootless 
  # dind:
  #   image: docker:27.3.1-dind
  #   container_name: dind
  #   ## utilise les caractéristiques du noyau (UNSAFE)
  #   ## FORCE PORT 2376 => IL FAUT AJOUTER le certificat .pem côté client
  #   privileged: true
  #   networks:
  #     - jenkins-net

volumes:
  jenkins_home:

networks:
  jenkins-net:
    name: jenkins-net
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24
          gateway: 172.20.0.1 
